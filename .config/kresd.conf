-- SPDX-License-Identifier: CC0-1.0
-- vim:syntax=lua:set ts=4 sw=4:
-- Refer to manual: https://knot-resolver.readthedocs.org/en/stable/

-- /etc/fstab
-- tmpfs /var/cache/knot-resolver tmpfs rw,size=1000M,uid=knot-resolver,gid=knot-resolver,nosuid,nodev,noexec,mode=0700 0 0

logfile = '/var/log/knot-resolver.log'

-- Charge les modules utiles
modules = {
    'hints > iterate',     -- Active le chargement de /etc/hosts ou de root hints personnalisés
    'policy',              -- Active le moteur de politiques DNS
    'detect_time_jump',    -- Gère les sauts temporels du système
    'stats',
    -- 'http',
}

modules = {
    predict = {
        window = 30,            -- 30 minutes par fenêtre
        period = 24 * (60 / 30) -- 24 heures = 48 fenêtres de 30 minutes
    }
}

-- Configuration de l'interface réseau (écoute locale uniquement)
-- net.listen('127.0.0.1', 8453, { kind = 'webmgmt' })
-- net.listen({'127.0.0.1', '::1'}, 53, { kind = 'dns' })
net.listen('127.0.0.1', 53, { kind = 'dns' })

-- Configure la taille du cache DNS
cache.size = 990 * MB      -- Définit la taille du cache
cache.max_ttl(86400)       -- Définit la durée maximale de vie du cache (1 jour)
cache.min_ttl(3600)        -- Définit la durée minimale de vie du cache (60 minutes)

-- Définit le niveau de journalisation
log_level('err')

dofile('/etc/knot-resolver/blocklist-custom.lua')

-- Redirige toutes les requêtes DNS via TLS vers des résolveurs filtrants
policy.add(
    policy.slice(
        policy.slice_randomize_psl(),
        -- Slice zero.dns0.eu
        policy.TLS_FORWARD({
            {'193.110.81.9', hostname='zero.dns0.eu'},
            {'2a0f:fc80::9', hostname='zero.dns0.eu'},
            {'185.253.5.9', hostname='zero.dns0.eu'},
            {'2a0f:fc81::9', hostname='zero.dns0.eu'},
        }),

        -- Slice dns0.eu
        policy.TLS_FORWARD({
            {'193.110.81.0', hostname='dns0.eu'},
            {'2a0f:fc80::', hostname='dns0.eu'},
            {'185.253.5.0', hostname='dns0.eu'},
            {'2a0f:fc81::', hostname='dns0.eu'},
        }),

        -- Slice FDN
        policy.TLS_FORWARD({
            {'80.67.169.12', hostname='ns0.fdn.fr'},
            {'2001:910:800::12', hostname='ns0.fdn.fr'},
            {'80.67.169.40', hostname='ns1.fdn.fr'},
            {'2001:910:800::40', hostname='ns1.fdn.fr'},
        }),

        -- Slice Quad9
        policy.TLS_FORWARD({
            {'9.9.9.11', hostname='dns11.quad9.net'},
            {'149.112.112.11', hostname='dns11.quad9.net'},
            {'2620:fe::11', hostname='dns11.quad9.net'},
            {'2620:fe::fe:11', hostname='dns11.quad9.net'},
        })

    )
)
