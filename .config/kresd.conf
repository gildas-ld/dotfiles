-- SPDX-License-Identifier: CC0-1.0
-- vim:syntax=lua:set ts=4 sw=4:
-- Refer to manual: https://knot-resolver.readthedocs.org/en/stable/

-- logfile = '/var/log/knot-resolver.log'

-- Configurer GeoIP
-- local mmdb = require('mmdb')
-- local db_path = '/etc/knot-resolver/DBIP-City.mmdb'
-- local geoip_db = mmdb.open(db_path)
-- net.listen('127.0.0.1', 853, { kind = 'tls' })
-- net.listen('127.0.0.1', 443, { kind = 'doh2' })
-- net.listen('::1', 53, { kind = 'dns', freebind = true })
-- net.listen('::1', 853, { kind = 'tls', freebind = true })
-- net.listen('::1', 443, { kind = 'doh2' })
 
-- http.config({
--     geoip = '/etc/knot-resolver/DBIP-City.mmdb',
--     tls = true,
--     cert = '/etc/knot-resolver/https/knot-resolver.ooguy.com.csr',
--     key  = '/etc/knot-resolver/https/knot-resolver.ooguy.com.key',
--     restrict = {'127.0.0.1'}
-- })
-- Résolveur principal (Pi-hole) puis AdGuard

-- local pihole_resolver = '192.168.1.15'
-- local adguard_resolvers = {'94.140.14.14', '94.140.15.15'}

-- DNS vers le Pi-hole
-- policy.add(policy.all(policy.FORWARD('192.168.1.15')))
-- policy.add(policy.all(policy.FORWARD(adguard_resolvers)))


-- Network interface configuration
net.listen('127.0.0.1', 53, { kind = 'dns' })

-- policy.add(policy.all(policy.FORWARD('192.168.1.15@53')))
-- policy.add(policy.all(policy.FORWARD('1.1.1.1')))
-- policy.add(policy.all(policy.FORWARD('127.0.0.1@5353')))

policy.add(policy.all(policy.TLS_FORWARD({
  {'9.9.9.11',  hostname='dns11.quad9.net'},
  {'149.112.112.11',  hostname='dns11.quad9.net'}
})))


log_level('warning')
-- Désactiver la validation DNSSEC

trust_anchors.remove('.')

modules = {
    'hints > iterate',  -- Allow loading /etc/hosts or custom root hints
    'policy',
    'predict',          -- Prefetch expiring/frequent records
  --  'stats',          -- Track internal statistics
  --  'http',
  --  'view',
    'serve_stale < cache',
    'workarounds < iterate',
}

predict.config({
    window = 30,  
    period = 24*(60/15)  
})


-- Cache size
cache.size = 2500 * MB
cache.max_ttl(86400)  -- Temps maximum de cache en secondes (1 jour)
cache.min_ttl(10800)  -- Temps minimum de cache en secondes (10 minutes)
